#!/usr/bin/env python
PACKAGE = "stargazer_ros_tool"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("maxRadiusForCluster", double_t, 0, "Maximum radius for clustering of points to landmarks", 0, 0, 2000)
gen.add("minPointsPerLandmark", int_t, 0, "Minimum count of points per landmark", 1, 1, 100)
gen.add("maxPointsPerLandmark", int_t, 0, "Maximum count of points per landmark", 1, 1, 100)
gen.add("debug_mode", bool_t, 0, "Activate debug mode for landmark finder to show results", False)
gen.add("fwLengthTriangle", double_t, 0, "Weight factor for the circumference of the triangle", 0, 0, 10)
gen.add("fwProjectedSecantLength", double_t, 0, "Weight factor for the dot product of the secants", 0, 0, 150)
gen.add("fwSecantsLengthDiff", double_t, 0, "Weight factor for the length difference of the secant", 0, 0, 30)
gen.add("hypotenuseTolerance", double_t, 0, "tolerance for the length difference of the hypotenuse and the secants", 0.71, 0.71, 2) #minimum is 1/sqrt(2)

# SimpleBlobDetection
gen.add("blobFilterByArea",        bool_t, 0, "", False)
gen.add("blobMinArea",             double_t, 0, "", 0, 0, 1000)
gen.add("blobMaxArea",             double_t, 0, "", 1000, 0, 1000)

gen.add("blobFilterByCircularity", bool_t, 0, "", False)
gen.add("blobMinCircularity",      double_t, 0, "", 0, 0, 1.01)
gen.add("blobMaxCircularity",      double_t, 0, "", 1.01, 0, 1.01)

gen.add("blobFilterByConvexity",   bool_t, 0, "", False)
gen.add("blobMinConvexity",        double_t, 0, "", 0, 0, 1.01)
gen.add("blobMaxConvexity",        double_t, 0, "", 1.01, 0, 1.01)

gen.add("blobFilterByInertia",     bool_t, 0, "", False)
gen.add("blobMinInertiaRatio",     double_t, 0, "", 0, 0, 1.01)
gen.add("blobMaxInertiaRatio",     double_t, 0, "", 1.01, 0, 1.01)

gen.add("blobMinDistBetweenBlobs", double_t, 0, "", 0, 0, 1000)
gen.add("blobMinRepeatability",    int_t, 0, "", 1, 1, 100)

gen.add("blobMinThreshold",        double_t, 0, "", 0, 0, 255)
gen.add("blobMaxThreshold",        double_t, 0, "", 255, 0, 255)
gen.add("blobThresholdStep",       double_t, 0, "", 50, 1, 255)

exit(gen.generate(PACKAGE, "stargazer_ros_tool", "LandmarkFinder"))
